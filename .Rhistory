}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
else if(df.surv_data[pat,"avType"] == "M"){
df.surv_data[pat,"avImp"] = "Mechanical"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Epic"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ],
df.surv_data[which(df.surv_data[,"avType"] == "M"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, ifelse(avImp=="SJM.Epic", 2, ifelse(avImp=="SJM.Trifecta", 3, 4))))
df.surv_data = df.surv_data[,-c(4,5, 6)]
colnames(df.surv_data)[6:8] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
#transform age with cubic spline
rownames(df.surv_data) = 1:nrow(df.surv_data)
df.surv_data$age = as.integer(df.surv_data$age)
fit<-lm(age ~ bs(valve.yrs, df=3, knots = c(seq(0.1,11,0.01))), data = df.surv_data)
df.surv_data$age.cubic = predict(fit,newdata = list(valve.yrs=df.surv_data$valve.yrs))
df.surv_data_m = df.surv_data
#generate a new df without mechanical valves
df.surv_data_b = rbind(df.surv_data[which(df.surv_data[,"avImp"] == 1), ],
df.surv_data[which(df.surv_data[,"avImp"] == 2), ],
df.surv_data[which(df.surv_data[,"avImp"] == 3), ])
df.surv_data_b$SurvObj <- with(df.surv_data_b, Surv(valve.yrs, status == 2))
rm(df.surv_data, pat)
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data_m, conf.type = "log-log")
km.by.type <- survfit(SurvObj ~ avType, data = df.surv_data_m, conf.type = "log-log")
km.by.brand_m <- survfit(SurvObj ~ avImp, data = df.surv_data_m, conf.type = "log-log")
km.by.brand_b <- survfit(SurvObj ~ avImp, data = df.surv_data_b, conf.type = "log-log")
#univariate cox regression analysis
covariates_m <- c("age.cubic", "sex", "avType", "avImp")
covariates_b <- c("age.cubic", "sex", "avImp")
univ_formulas_m <- sapply(covariates_m,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_formulas_b <- sapply(covariates_b,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_models_m <- lapply(univ_formulas_m, function(x){coxph(x, data = df.surv_data_m)})
univ_models_b <- lapply(univ_formulas_b, function(x){coxph(x, data = df.surv_data_b)})
univ_results_m <- lapply(univ_models_m,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
univ_results_b <- lapply(univ_models_b,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
res_m <- t(as.data.frame(univ_results_m, check.names = FALSE))
res_b <- t(as.data.frame(univ_results_b, check.names = FALSE))
as.data.frame(res_m)
as.data.frame(res_b)
#multivariate cox regression analysis
res.cox.m1 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex, data = df.surv_data_m)
res.cox.m2 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avType, data = df.surv_data_m)
res.cox.m3 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_m)
res.cox.b <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_b)
summary(res.cox.m1)
summary(res.cox.m2)
summary(res.cox.m3)
summary(res.cox.b)
qqnorm(df.surv_data_m$age.cubic)
qqline(df.surv_datam$age.cubic)
qqline(df.surv_data_m$age.cubic)
#test proportionality: if p < 0.05, then no proportionality
cox.zph_m1 = cox.zph(res.cox.m1, transform="km", global=TRUE)
cox.zph_m2 = cox.zph(res.cox.m2, transform="km", global=TRUE)
cox.zph_m3 = cox.zph(res.cox.m3, transform="km", global=TRUE)
cox.zph_b = cox.zph(res.cox.b, transform="km", global=TRUE)
cox.zph_m1
cox.zph_m2
cox.zph_m3
cox.zph_b
#slope of 0 implies proportionality
plot(cox.zph_m1[1])
plot(cox.zph_m1[2])
plot(cox.zph_m2[3])
plot(cox.zph_m3[3])
plot(cox.zph_b[3])
#residuals
plot(df.surv_data_m[,"age"], resid(res.cox.m1, type="score")[,1], ylab="Score Residuals", xlab="age")
plot(df.surv_data_m[,"sex"], resid(res.cox.m1, type="score")[,2], ylab="Score Residuals", xlab="sex")
plot(df.surv_data_m[,"avType"], resid(res.cox.m2, type="score")[,3], ylab="Score Residuals", xlab="type")
plot(df.surv_data_m[,"avImp"], resid(res.cox.m3, type="score")[,3], ylab="Score Residuals", xlab="brand with Mechanical")
plot(df.surv_data_b[,"avImp"], resid(res.cox.b, type="score")[,3], ylab="Score Residuals", xlab="brand without Mechanical")
qqnorm(df.surv_data_m$age.cubic)
qqline(df.surv_data_m$age.cubic)
library("splines")
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Epic", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Epic"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
else if(df.surv_data[pat,"avType"] == "M"){
df.surv_data[pat,"avImp"] = "Mechanical"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Epic"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ],
df.surv_data[which(df.surv_data[,"avType"] == "M"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, ifelse(avImp=="SJM.Epic", 2, ifelse(avImp=="SJM.Trifecta", 3, 4))))
df.surv_data = df.surv_data[,-c(4,5, 6)]
colnames(df.surv_data)[6:8] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
#transform age with cubic spline
rownames(df.surv_data) = 1:nrow(df.surv_data)
df.surv_data$age = as.integer(df.surv_data$age)
fit<-lm(age ~ bs(valve.yrs, df=3, knots = c(seq(0.1,11,0.05))), data = df.surv_data)
df.surv_data$age.cubic = predict(fit,newdata = list(valve.yrs=df.surv_data$valve.yrs))
df.surv_data_m = df.surv_data
#generate a new df without mechanical valves
df.surv_data_b = rbind(df.surv_data[which(df.surv_data[,"avImp"] == 1), ],
df.surv_data[which(df.surv_data[,"avImp"] == 2), ],
df.surv_data[which(df.surv_data[,"avImp"] == 3), ])
df.surv_data_b$SurvObj <- with(df.surv_data_b, Surv(valve.yrs, status == 2))
rm(df.surv_data, pat)
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data_m, conf.type = "log-log")
km.by.type <- survfit(SurvObj ~ avType, data = df.surv_data_m, conf.type = "log-log")
km.by.brand_m <- survfit(SurvObj ~ avImp, data = df.surv_data_m, conf.type = "log-log")
km.by.brand_b <- survfit(SurvObj ~ avImp, data = df.surv_data_b, conf.type = "log-log")
ggsurvplot(km.by.sex, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
#univariate cox regression analysis
covariates_m <- c("age.cubic", "sex", "avType", "avImp")
covariates_b <- c("age.cubic", "sex", "avImp")
univ_formulas_m <- sapply(covariates_m,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_formulas_b <- sapply(covariates_b,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_models_m <- lapply(univ_formulas_m, function(x){coxph(x, data = df.surv_data_m)})
univ_models_b <- lapply(univ_formulas_b, function(x){coxph(x, data = df.surv_data_b)})
univ_results_m <- lapply(univ_models_m,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
univ_results_b <- lapply(univ_models_b,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
res_m <- t(as.data.frame(univ_results_m, check.names = FALSE))
res_b <- t(as.data.frame(univ_results_b, check.names = FALSE))
as.data.frame(res_m)
as.data.frame(res_b)
#multivariate cox regression analysis
res.cox.m1 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex, data = df.surv_data_m)
res.cox.m2 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avType, data = df.surv_data_m)
res.cox.m3 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_m)
res.cox.b <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_b)
summary(res.cox.m1)
summary(res.cox.m2)
summary(res.cox.m3)
summary(res.cox.b)
#test proportionality: if p < 0.05, then no proportionality
cox.zph_m1 = cox.zph(res.cox.m1, transform="km", global=TRUE)
cox.zph_m2 = cox.zph(res.cox.m2, transform="km", global=TRUE)
cox.zph_m3 = cox.zph(res.cox.m3, transform="km", global=TRUE)
cox.zph_b = cox.zph(res.cox.b, transform="km", global=TRUE)
cox.zph_m1
cox.zph_m2
cox.zph_m3
cox.zph_b
qqnorm(df.surv_data_m$age.cubic)
qqline(df.surv_data_m$age.cubic)
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Epic", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Epic"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
else if(df.surv_data[pat,"avType"] == "M"){
df.surv_data[pat,"avImp"] = "Mechanical"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Epic"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ],
df.surv_data[which(df.surv_data[,"avType"] == "M"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, ifelse(avImp=="SJM.Epic", 2, ifelse(avImp=="SJM.Trifecta", 3, 4))))
df.surv_data = df.surv_data[,-c(4,5, 6)]
colnames(df.surv_data)[6:8] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
#transform age with cubic spline
rownames(df.surv_data) = 1:nrow(df.surv_data)
df.surv_data$age = as.integer(df.surv_data$age)
fit<-lm(age ~ bs(valve.yrs, df=3, knots = c(seq(0.1,11,0.04))), data = df.surv_data)
df.surv_data$age.cubic = predict(fit,newdata = list(valve.yrs=df.surv_data$valve.yrs))
df.surv_data_m = df.surv_data
#generate a new df without mechanical valves
df.surv_data_b = rbind(df.surv_data[which(df.surv_data[,"avImp"] == 1), ],
df.surv_data[which(df.surv_data[,"avImp"] == 2), ],
df.surv_data[which(df.surv_data[,"avImp"] == 3), ])
df.surv_data_b$SurvObj <- with(df.surv_data_b, Surv(valve.yrs, status == 2))
rm(df.surv_data, pat)
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data_m, conf.type = "log-log")
km.by.type <- survfit(SurvObj ~ avType, data = df.surv_data_m, conf.type = "log-log")
km.by.brand_m <- survfit(SurvObj ~ avImp, data = df.surv_data_m, conf.type = "log-log")
km.by.brand_b <- survfit(SurvObj ~ avImp, data = df.surv_data_b, conf.type = "log-log")
#univariate cox regression analysis
covariates_m <- c("age.cubic", "sex", "avType", "avImp")
covariates_b <- c("age.cubic", "sex", "avImp")
univ_formulas_m <- sapply(covariates_m,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_formulas_b <- sapply(covariates_b,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_models_m <- lapply(univ_formulas_m, function(x){coxph(x, data = df.surv_data_m)})
univ_models_b <- lapply(univ_formulas_b, function(x){coxph(x, data = df.surv_data_b)})
univ_results_m <- lapply(univ_models_m,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
univ_results_b <- lapply(univ_models_b,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
res_m <- t(as.data.frame(univ_results_m, check.names = FALSE))
res_b <- t(as.data.frame(univ_results_b, check.names = FALSE))
as.data.frame(res_m)
as.data.frame(res_b)
#multivariate cox regression analysis
res.cox.m1 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex, data = df.surv_data_m)
res.cox.m2 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avType, data = df.surv_data_m)
res.cox.m3 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_m)
res.cox.b <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_b)
summary(res.cox.m1)
summary(res.cox.m2)
summary(res.cox.m3)
summary(res.cox.b)
qqnorm(df.surv_data_m$age.cubic)
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Epic", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Epic"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
else if(df.surv_data[pat,"avType"] == "M"){
df.surv_data[pat,"avImp"] = "Mechanical"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Epic"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ],
df.surv_data[which(df.surv_data[,"avType"] == "M"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, ifelse(avImp=="SJM.Epic", 2, ifelse(avImp=="SJM.Trifecta", 3, 4))))
df.surv_data = df.surv_data[,-c(4,5, 6)]
colnames(df.surv_data)[6:8] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
#transform age with cubic spline
rownames(df.surv_data) = 1:nrow(df.surv_data)
df.surv_data$age = as.integer(df.surv_data$age)
fit<-lm(age ~ bs(valve.yrs, df=3, knots = c(seq(0.1,11,0.03))), data = df.surv_data)
df.surv_data$age.cubic = predict(fit,newdata = list(valve.yrs=df.surv_data$valve.yrs))
df.surv_data_m = df.surv_data
#generate a new df without mechanical valves
df.surv_data_b = rbind(df.surv_data[which(df.surv_data[,"avImp"] == 1), ],
df.surv_data[which(df.surv_data[,"avImp"] == 2), ],
df.surv_data[which(df.surv_data[,"avImp"] == 3), ])
df.surv_data_b$SurvObj <- with(df.surv_data_b, Surv(valve.yrs, status == 2))
rm(df.surv_data, pat)
#univariate cox regression analysis
covariates_m <- c("age.cubic", "sex", "avType", "avImp")
covariates_b <- c("age.cubic", "sex", "avImp")
univ_formulas_m <- sapply(covariates_m,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_formulas_b <- sapply(covariates_b,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_models_m <- lapply(univ_formulas_m, function(x){coxph(x, data = df.surv_data_m)})
univ_models_b <- lapply(univ_formulas_b, function(x){coxph(x, data = df.surv_data_b)})
univ_results_m <- lapply(univ_models_m,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
univ_results_b <- lapply(univ_models_b,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
res_m <- t(as.data.frame(univ_results_m, check.names = FALSE))
res_b <- t(as.data.frame(univ_results_b, check.names = FALSE))
as.data.frame(res_m)
as.data.frame(res_b)
#multivariate cox regression analysis
res.cox.m1 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex, data = df.surv_data_m)
res.cox.m2 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avType, data = df.surv_data_m)
res.cox.m3 <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_m)
res.cox.b <- coxph(Surv(valve.yrs, status) ~ age.cubic + sex + avImp, data = df.surv_data_b)
summary(res.cox.m1)
summary(res.cox.m2)
summary(res.cox.m3)
summary(res.cox.b)
qqnorm(df.surv_data_m$age.cubic)
qqline(df.surv_data_m$age.cubic)
#test proportionality: if p < 0.05, then no proportionality
cox.zph_m1 = cox.zph(res.cox.m1, transform="km", global=TRUE)
cox.zph_m2 = cox.zph(res.cox.m2, transform="km", global=TRUE)
cox.zph_m3 = cox.zph(res.cox.m3, transform="km", global=TRUE)
cox.zph_b = cox.zph(res.cox.b, transform="km", global=TRUE)
cox.zph_m1
cox.zph_m2
cox.zph_m3
cox.zph_b
cox.by.brand = with(df.surv_data_m, data.frame(age.cubic = rep(mean(age.cubic), 4), sex = c(1,1,1,1), avImp = c(1,2,3,4)))
ggsurvplot(survfit(res.cox.m3, newdata=cox.by.brand, data = df.surv_data_m, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("CE", "SJM.Epic", "SJM.Trifecta", "Mechanical"), conf.int = T, ylim = c(0.85, 1))
qqnorm(df.surv_data_m$valve.yrs)
qqnorm(df.surv_data_m$age.cubic)
qqline(df.surv_data_m$age.cubic)
qqnorm(df.surv_data_m$age.cubic, main="qq plot: age with cubic spline transform", ylab="age.cubic (yrs)")
qqline(df.surv_data_m$age.cubic)
View(df.failure_rate)
ci((df.surv_data_m$avIMp==1)$valve.yrs)
confint((df.surv_data_m$avIMp==1)$valve.yrs)
df.surv_data_m$avIMp == 1
df.surv_data_m$avIMp=1
df.surv_data_m$status==2
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Epic", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Epic"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
else if(df.surv_data[pat,"avType"] == "M"){
df.surv_data[pat,"avImp"] = "Mechanical"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Epic"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ],
df.surv_data[which(df.surv_data[,"avType"] == "M"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, ifelse(avImp=="SJM.Epic", 2, ifelse(avImp=="SJM.Trifecta", 3, 4))))
df.surv_data = df.surv_data[,-c(4,5, 6)]
colnames(df.surv_data)[6:8] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
#transform age with cubic spline
rownames(df.surv_data) = 1:nrow(df.surv_data)
df.surv_data$age = as.integer(df.surv_data$age)
fit<-lm(age ~ bs(valve.yrs, df=3, knots = c(seq(0.1,11,0.03))), data = df.surv_data)
df.surv_data$age.cubic = predict(fit,newdata = list(valve.yrs=df.surv_data$valve.yrs))
df.surv_data_m = df.surv_data
#generate a new df without mechanical valves
df.surv_data_b = rbind(df.surv_data[which(df.surv_data[,"avImp"] == 1), ],
df.surv_data[which(df.surv_data[,"avImp"] == 2), ],
df.surv_data[which(df.surv_data[,"avImp"] == 3), ])
df.surv_data_b$SurvObj <- with(df.surv_data_b, Surv(valve.yrs, status == 2))
rm(df.surv_data, pat)
df.surv_data_m$avIMp==1
df.surv_data_m$avIMp=="1"
df.surv_data_m$avImp==1
confint((df.surv_data_m$avImp==1)$valve.yrs)
(df.surv_data_m$avImp==1)$valve.yrs
(df.surv_data_m$avImp==1)[,"valve.yrs"]
a = df.surv_data_m$avImp == 1
confint(a$valve.yrs)
confint(as.data.frame(a)$valve.yrs)
rm(s)
rm(a)
save.image("~/GitHub/AVREval/env.RData")

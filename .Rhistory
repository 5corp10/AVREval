else if(("First Op" == df.all_data[pat2,"redoAny"]) && ("Reop #1" == df.all_data[pat,"redoAny"])){
df.linked1[j,] = df.all_data[pat2,]
df.linked2[j,] = df.all_data[pat,]
j = j + 1
linked = TRUE
break
}
}
}
if(("First Op" == df.all_data[pat,"redoAny"]) && (linked == FALSE) && (!is.na(df.all_data[pat,"avType"]))){
df.unique[i,] = df.all_data[pat,]
i = i + 1
}
}
if("First Op" == df.all_data[NUM_PAT,"redoAny"]){
df.unique[i,] = df.all_data[NUM_PAT,]
}
assign("df.unique", df.unique, envir = .GlobalEnv)
assign("df.linked1", df.linked1, envir = .GlobalEnv)
assign("df.linked2", df.linked2, envir = .GlobalEnv)
assign("NUM_unique", nrow(df.unique), envir = .GlobalEnv)
assign("NUM_linked", nrow(df.linked1), envir = .GlobalEnv)
}
sortt = function()
{
df.unique = df.linked1 = df.linked2 = data.frame(df.all_data[1,])
i = j = k = 1
for(pat in 1:(NUM_PAT-1)){
print(pat)
linked = FALSE
id = df.all_data[pat,"Patient_ID"]
for(pat2 in (pat+1):NUM_PAT){
if(id == df.all_data[pat2,"Patient_ID"]){
if(("First Op" == df.all_data[pat,"redoAny"]) && ("Reop #1" == df.all_data[pat2,"redoAny"])){
df.linked1[j,] = df.all_data[pat,]
df.linked2[j,] = df.all_data[pat2,]
j = j + 1
linked = TRUE
break
}
else if(("First Op" == df.all_data[pat2,"redoAny"]) && ("Reop #1" == df.all_data[pat,"redoAny"])){
df.linked1[j,] = df.all_data[pat2,]
df.linked2[j,] = df.all_data[pat,]
j = j + 1
linked = TRUE
break
}
}
}
if(("First Op" == df.all_data[pat,"redoAny"]) && (linked == FALSE) && (!is.na(df.all_data[pat,"avType"]))){
df.unique[i,] = df.all_data[pat,]
i = i + 1
}
}
if("First Op" == df.all_data[NUM_PAT,"redoAny"]){
df.unique[i,] = df.all_data[NUM_PAT,]
}
assign("df.unique", df.unique, envir = .GlobalEnv)
assign("df.linked1", df.linked1, envir = .GlobalEnv)
assign("df.linked2", df.linked2, envir = .GlobalEnv)
assign("NUM_unique", nrow(df.unique), envir = .GlobalEnv)
assign("NUM_linked", nrow(df.linked1), envir = .GlobalEnv)
}
sortt()
assign("df.all_data", arrange(df.criteria_results, Patient_ID), envir = .GlobalEnv)
library("spatstat.utils", lib.loc="~/R/win-library/3.5")
assign("df.all_data", arrange(df.criteria_results, Patient_ID), envir = .GlobalEnv)
detach("package:spatstat.utils", unload=TRUE)
library("dplyr")
assign("df.all_data", arrange(df.criteria_results, Patient_ID), envir = .GlobalEnv)
assign("df.all_data", arrange(df.all_data, Patient_ID), envir = .GlobalEnv)
View(df.all_data)
byType = function()
{
df.by_type = data.frame("type" = c("B", "B", "M", "M"), "group" = c("implants", "explants", "implants", "explants"),
"2006" = c(0,0,0,0), "2007" = c(0,0,0,0), "2008" = c(0,0,0,0), "2009" = c(0,0,0,0),
"2010" = c(0,0,0,0), "2011" = c(0,0,0,0), "2012" = c(0,0,0,0), "2013" = c(0,0,0,0),
"2014" = c(0,0,0,0), "2015" = c(0,0,0,0), "2016" = c(0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
for(year in 2006:2016){
if(as.integer(format(df.unique[pat,"ordate"],"%Y")) == year){
if(df.unique[pat,"avType"] == "B"){
df.by_type[1,as.character(year)] = df.by_type[1,as.character(year)] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.by_type[3,as.character(year)] = df.by_type[3,as.character(year)] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(year in 2006:2016){
if(as.integer(format(df.linked1[pat,"ordate"],"%Y")) == year){
if(df.linked1[pat,"avType"] == "B"){
df.by_type[1,as.character(year)] = df.by_type[1,as.character(year)] + 1
df.by_type[2,as.character(year)] = df.by_type[2,as.character(year)] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.by_type[3,as.character(year)] = df.by_type[3,as.character(year)] + 1
df.by_type[4,as.character(year)] = df.by_type[4,as.character(year)] + 1
}
}
}
}
assign("df.by_type", df.by_type, envir = .GlobalEnv)
}
byType()
View(df.by_type)
df.by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("implants", "explants", "implants", "explants", "implants", "explants", "implants", "explants"),
"2006" = c(0,0,0,0,0,0,0,0), "2007" = c(0,0,0,0,0,0,0,0), "2008" = c(0,0,0,0,0,0,0,0), "2009" = c(0,0,0,0,0,0,0,0),
"2010" = c(0,0,0,0,0,0,0,0), "2011" = c(0,0,0,0,0,0,0,0), "2012" = c(0,0,0,0,0,0,0,0), "2013" = c(0,0,0,0,0,0,0,0),
"2014" = c(0,0,0,0,0,0,0,0), "2015" = c(0,0,0,0,0,0,0,0), "2016" = c(0,0,0,0,0,0,0,0), check.names = F)
View(df.by_brand)
byBrand = function()
{
df.by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("implants", "explants", "implants", "explants", "implants", "explants", "implants", "explants"),
"2006" = c(0,0,0,0,0,0,0,0), "2007" = c(0,0,0,0,0,0,0,0), "2008" = c(0,0,0,0,0,0,0,0), "2009" = c(0,0,0,0,0,0,0,0),
"2010" = c(0,0,0,0,0,0,0,0), "2011" = c(0,0,0,0,0,0,0,0), "2012" = c(0,0,0,0,0,0,0,0), "2013" = c(0,0,0,0,0,0,0,0),
"2014" = c(0,0,0,0,0,0,0,0), "2015" = c(0,0,0,0,0,0,0,0), "2016" = c(0,0,0,0,0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
for(year in 2006:2016){
if(as.integer(format(df.unique[pat,"ordate"],"%Y")) == year){
if(length(grep("CE ", df.unique[pat,"avImp"])) == 1){
df.by_brand[1,as.character(year)] = df.by_brand[1,as.character(year)] + 1
}
else if(length(grep("Epic", df.unique[pat,"avImp"])) == 1){
df.by_brand[3,as.character(year)] = df.by_brand[3,as.character(year)] + 1
}
else if(length(grep("Tri", df.unique[pat,"avImp"])) == 1){
df.by_brand[5,as.character(year)] = df.by_brand[5,as.character(year)] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.by_brand[7,as.character(year)] = df.by_brand[7,as.character(year)] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(year in 2006:2016){
if(as.integer(format(df.linked1[pat,"ordate"],"%Y")) == year){
if(length(grep("CE ", df.linked1[pat,"avImp"])) == 1){
df.by_brand[1,as.character(year)] = df.by_brand[1,as.character(year)] + 1
df.by_brand[2,as.character(year)] = df.by_brand[2,as.character(year)] + 1
}
else if(length(grep("Epic", df.linked1[pat,"avImp"])) == 1){
df.by_brand[3,as.character(year)] = df.by_brand[3,as.character(year)] + 1
df.by_brand[4,as.character(year)] = df.by_brand[4,as.character(year)] + 1
}
else if(length(grep("Tri", df.linked1[pat,"avImp"])) == 1){
df.by_brand[5,as.character(year)] = df.by_brand[5,as.character(year)] + 1
df.by_brand[6,as.character(year)] = df.by_brand[6,as.character(year)] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.by_brand[7,as.character(year)] = df.by_brand[7,as.character(year)] + 1
df.by_brand[8,as.character(year)] = df.by_brand[8,as.character(year)] + 1
}
}
}
}
assign("df.by_brand", df.by_brand, envir = .GlobalEnv)
}
byBrand()
View(df.by_brand)
sort = function()
{
assign("df.all_data", arrange(df.all_data, Patient_ID), envir = .GlobalEnv)
df.unique = df.linked1 = df.linked2 = data.frame(df.all_data[1,])
i = j = k = 1
for(pat in 1:(NUM_PAT-1)){
print(pat)
linked = FALSE
id = df.all_data[pat,"Patient_ID"]
for(pat2 in (pat+1):NUM_PAT){
if(id == df.all_data[pat2,"Patient_ID"]){
if(("First Op" == df.all_data[pat,"redoAny"]) && ("Reop #1" == df.all_data[pat2,"redoAny"])){
df.linked1[j,] = df.all_data[pat,]
df.linked2[j,] = df.all_data[pat2,]
j = j + 1
linked = TRUE
break
}
else if(("First Op" == df.all_data[pat2,"redoAny"]) && ("Reop #1" == df.all_data[pat,"redoAny"])){
df.linked1[j,] = df.all_data[pat2,]
df.linked2[j,] = df.all_data[pat,]
j = j + 1
linked = TRUE
break
}
}
}
if(("First Op" == df.all_data[pat,"redoAny"]) && (linked == FALSE) && (!is.na(df.all_data[pat,"avType"]))){
df.unique[i,] = df.all_data[pat,]
i = i + 1
}
}
if("First Op" == df.all_data[NUM_PAT,"redoAny"]){
df.unique[i,] = df.all_data[NUM_PAT,]
}
assign("df.unique", df.unique, envir = .GlobalEnv)
assign("df.linked1", df.linked1, envir = .GlobalEnv)
assign("df.linked2", df.linked2, envir = .GlobalEnv)
assign("NUM_unique", nrow(df.unique), envir = .GlobalEnv)
assign("NUM_linked", nrow(df.linked1), envir = .GlobalEnv)
}
rm(sortt)
View(df.by_brand)
df.comp_by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("remaining", "explants", "remaining", "explants", "remaining", "explants", "remaining", "explants"),
"OpComp" = c(0,0,0,0), "CardiacComp" = c(0,0,0,0), "NeuroComp" = c(0,0,0,0), "PulmComp" = c(0,0,0,0),
"longVent" = c(0,0,0,0), "Pneumonia" = c(0,0,0,0), "Reintubation" = c(0,0,0,0), check.names = F)
View(df.comp_by_brand)
compByBrand = function()
{
df.comp_by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("remaining", "explants", "remaining", "explants", "remaining", "explants", "remaining", "explants"),
"OpComp" = c(0,0,0,0), "CardiacComp" = c(0,0,0,0), "NeuroComp" = c(0,0,0,0), "PulmComp" = c(0,0,0,0),
"longVent" = c(0,0,0,0), "Pneumonia" = c(0,0,0,0), "Reintubation" = c(0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if(df.unique[pat,comp] == "Yes"){
if(length(grep("CE ", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[1,comp] = df.comp_by_brand[1,comp] + 1
}
else if(length(grep("Epic", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[3,comp] = df.comp_by_brand[3,comp] + 1
}
else if(length(grep("Tri", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[5,comp] = df.comp_by_brand[5,comp] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.comp_by_brand[7,comp] = df.comp_by_brand[7,comp] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if(df.linked1[pat,comp] == "Yes"){
if(length(grep("CE ", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[2,comp] = df.comp_by_brand[2,comp] + 1
}
else if(length(grep("Epic", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[4,comp] = df.comp_by_brand[4,comp] + 1
}
else if(length(grep("Tri", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[6,comp] = df.comp_by_brand[6,comp] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.comp_by_brand[8,comp] = df.comp_by_brand[8,comp] + 1
}
}
}
}
assign("df.comp_by_brand", df.comp_by_brand, envir = .GlobalEnv)
}
compByBrand()
df.all_data[1,"OpComp"]
# import all data
assign("df.all_data", data.frame(read_xlsx(excel.file, sheet=1)), envir = .GlobalEnv)
compByBrand()
df.all_data[1,"OpComp"]
typeof(df.all_data[1,"OpComp"])
compByBrand = function()
{
df.comp_by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("remaining", "explants", "remaining", "explants", "remaining", "explants", "remaining", "explants"),
"OpComp" = c(0,0,0,0), "CardiacComp" = c(0,0,0,0), "NeuroComp" = c(0,0,0,0), "PulmComp" = c(0,0,0,0),
"longVent" = c(0,0,0,0), "Pneumonia" = c(0,0,0,0), "Reintubation" = c(0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
print(pat)
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if(df.unique[pat,comp] == "Yes"){
if(length(grep("CE ", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[1,comp] = df.comp_by_brand[1,comp] + 1
}
else if(length(grep("Epic", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[3,comp] = df.comp_by_brand[3,comp] + 1
}
else if(length(grep("Tri", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[5,comp] = df.comp_by_brand[5,comp] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.comp_by_brand[7,comp] = df.comp_by_brand[7,comp] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if(df.linked1[pat,comp] == "Yes"){
if(length(grep("CE ", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[2,comp] = df.comp_by_brand[2,comp] + 1
}
else if(length(grep("Epic", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[4,comp] = df.comp_by_brand[4,comp] + 1
}
else if(length(grep("Tri", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[6,comp] = df.comp_by_brand[6,comp] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.comp_by_brand[8,comp] = df.comp_by_brand[8,comp] + 1
}
}
}
}
assign("df.comp_by_brand", df.comp_by_brand, envir = .GlobalEnv)
}
compByBrand()
compByBrand = function()
{
df.comp_by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("remaining", "explants", "remaining", "explants", "remaining", "explants", "remaining", "explants"),
"OpComp" = c(0,0,0,0), "CardiacComp" = c(0,0,0,0), "NeuroComp" = c(0,0,0,0), "PulmComp" = c(0,0,0,0),
"longVent" = c(0,0,0,0), "Pneumonia" = c(0,0,0,0), "Reintubation" = c(0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
print(pat)
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
print(comp)
if(df.unique[pat,comp] == "Yes"){
if(length(grep("CE ", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[1,comp] = df.comp_by_brand[1,comp] + 1
}
else if(length(grep("Epic", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[3,comp] = df.comp_by_brand[3,comp] + 1
}
else if(length(grep("Tri", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[5,comp] = df.comp_by_brand[5,comp] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.comp_by_brand[7,comp] = df.comp_by_brand[7,comp] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if(df.linked1[pat,comp] == "Yes"){
if(length(grep("CE ", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[2,comp] = df.comp_by_brand[2,comp] + 1
}
else if(length(grep("Epic", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[4,comp] = df.comp_by_brand[4,comp] + 1
}
else if(length(grep("Tri", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[6,comp] = df.comp_by_brand[6,comp] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.comp_by_brand[8,comp] = df.comp_by_brand[8,comp] + 1
}
}
}
}
assign("df.comp_by_brand", df.comp_by_brand, envir = .GlobalEnv)
}
compByBrand()
typeof(df.all_data[1,"Reintubation"])
df.all_data[1,"Reintubation"]
df.all_data[1,"Reintubation"] == "y"
(df.all_data[1,"Reintubation"] == "y") && (!is.na(df.all_data[1,"Reintubation"]))
compByBrand = function()
{
df.comp_by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("remaining", "explants", "remaining", "explants", "remaining", "explants", "remaining", "explants"),
"OpComp" = c(0,0,0,0), "CardiacComp" = c(0,0,0,0), "NeuroComp" = c(0,0,0,0), "PulmComp" = c(0,0,0,0),
"longVent" = c(0,0,0,0), "Pneumonia" = c(0,0,0,0), "Reintubation" = c(0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
print(pat)
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
print(comp)
if((df.unique[pat,comp] == "Yes") && (!is.na(df.all_data[pat,comp]))){
if(length(grep("CE ", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[1,comp] = df.comp_by_brand[1,comp] + 1
}
else if(length(grep("Epic", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[3,comp] = df.comp_by_brand[3,comp] + 1
}
else if(length(grep("Tri", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[5,comp] = df.comp_by_brand[5,comp] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.comp_by_brand[7,comp] = df.comp_by_brand[7,comp] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if((df.linked1[pat,comp] == "Yes") && (!is.na(df.all_data[pat,comp]))){
if(length(grep("CE ", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[2,comp] = df.comp_by_brand[2,comp] + 1
}
else if(length(grep("Epic", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[4,comp] = df.comp_by_brand[4,comp] + 1
}
else if(length(grep("Tri", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[6,comp] = df.comp_by_brand[6,comp] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.comp_by_brand[8,comp] = df.comp_by_brand[8,comp] + 1
}
}
}
}
assign("df.comp_by_brand", df.comp_by_brand, envir = .GlobalEnv)
}
compByBrand()
View(df.all_data)
(df.all_data[12,"Reintubation"] == "y") && (!is.na(df.all_data[12,"Reintubation"]))
(df.all_data[12,"Reintubation"] == "Yes") && (!is.na(df.all_data[12,"Reintubation"]))
View(df.unique)
(df.unique[12,"Reintubation"] == "Yes") && (!is.na(df.unique[12,"Reintubation"]))
View(df.comp_by_brand)
compByBrand = function()
{
df.comp_by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("remaining", "explants", "remaining", "explants", "remaining", "explants", "remaining", "explants"),
"OpComp" = c(0,0,0,0), "CardiacComp" = c(0,0,0,0), "NeuroComp" = c(0,0,0,0), "PulmComp" = c(0,0,0,0),
"longVent" = c(0,0,0,0), "Pneumonia" = c(0,0,0,0), "Reintubation" = c(0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
print(pat)
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
print(comp)
if((df.unique[pat,comp] == "Yes") && (!is.na(df.all_data[pat,comp]))){
print(df.unique[pat,comp])
if(length(grep("CE ", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[1,comp] = df.comp_by_brand[1,comp] + 1
}
else if(length(grep("Epic", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[3,comp] = df.comp_by_brand[3,comp] + 1
}
else if(length(grep("Tri", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[5,comp] = df.comp_by_brand[5,comp] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.comp_by_brand[7,comp] = df.comp_by_brand[7,comp] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if((df.linked1[pat,comp] == "Yes") && (!is.na(df.all_data[pat,comp]))){
if(length(grep("CE ", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[2,comp] = df.comp_by_brand[2,comp] + 1
}
else if(length(grep("Epic", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[4,comp] = df.comp_by_brand[4,comp] + 1
}
else if(length(grep("Tri", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[6,comp] = df.comp_by_brand[6,comp] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.comp_by_brand[8,comp] = df.comp_by_brand[8,comp] + 1
}
}
}
}
assign("df.comp_by_brand", df.comp_by_brand, envir = .GlobalEnv)
}
compByBrand()
compByBrand = function()
{
df.comp_by_brand = data.frame("brand" = c("CE", "CE", "SJM.Epic", "SJM.Epic", "SJM.Trifecta", "SJM.Trifecta", "Mechanical", "Mechanical"),
"group" = c("remaining", "explants", "remaining", "explants", "remaining", "explants", "remaining", "explants"),
"OpComp" = c(0,0,0,0), "CardiacComp" = c(0,0,0,0), "NeuroComp" = c(0,0,0,0), "PulmComp" = c(0,0,0,0),
"longVent" = c(0,0,0,0), "Pneumonia" = c(0,0,0,0), "Reintubation" = c(0,0,0,0), check.names = F)
for(pat in 1:NUM_unique){
print(pat)
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
print(comp)
if((!is.na(df.unique[pat,comp])) && (df.unique[pat,comp] == "Yes")){
print(df.unique[pat,comp])
if(length(grep("CE ", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[1,comp] = df.comp_by_brand[1,comp] + 1
}
else if(length(grep("Epic", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[3,comp] = df.comp_by_brand[3,comp] + 1
}
else if(length(grep("Tri", df.unique[pat,"avImp"])) == 1){
df.comp_by_brand[5,comp] = df.comp_by_brand[5,comp] + 1
}
else if(df.unique[pat,"avType"] == "M"){
df.comp_by_brand[7,comp] = df.comp_by_brand[7,comp] + 1
}
}
}
}
for(pat in 1:NUM_linked){
for(comp in c("OpComp", "CardiacComp", "NeuroComp", "PulmComp", "longVent", "Pneumonia", "Reintubation")){
if((!is.na(df.linked1[pat,comp])) && (df.linked1[pat,comp] == "Yes")){
if(length(grep("CE ", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[2,comp] = df.comp_by_brand[2,comp] + 1
}
else if(length(grep("Epic", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[4,comp] = df.comp_by_brand[4,comp] + 1
}
else if(length(grep("Tri", df.linked1[pat,"avImp"])) == 1){
df.comp_by_brand[6,comp] = df.comp_by_brand[6,comp] + 1
}
else if(df.linked1[pat,"avType"] == "M"){
df.comp_by_brand[8,comp] = df.comp_by_brand[8,comp] + 1
}
}
}
}
assign("df.comp_by_brand", df.comp_by_brand, envir = .GlobalEnv)
}
compByBrand()
save.image("~/GitHub/AVREval/env.RData")
View(df.comp_by_brand)

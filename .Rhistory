for(pat2 in (pat+1):NUM_PAT){
if(id == df.all_data[pat2,"Patient_ID"]){
if("1st" == df.all_data[pat,"redoAny"]){
df.linked1[j,] = df.all_data[pat,]
df.linked2[j,] = df.all_data[pat2,]
j = j + 1
linked = TRUE
break
}
else if("1st" == df.all_data[pat2,"redoAny"]){
df.linked1[j,] = df.all_data[pat2,]
df.linked2[j,] = df.all_data[pat,]
j = j + 1
linked = TRUE
break
}
}
}
if(("1st" == df.all_data[pat,"redoAny"]) && (linked == FALSE) && (!is.na(df.all_data[pat,"avType"]))){
df.unique[i,] = df.all_data[pat,]
i = i + 1
}
}
if("1st" == df.all_data[NUM_PAT,"redoAny"]){
df.unique[i,] = df.all_data[NUM_PAT,]
}
assign("df.unique", df.unique, envir = .GlobalEnv)
assign("df.linked1", df.linked1, envir = .GlobalEnv)
assign("df.linked2", df.linked2, envir = .GlobalEnv)
assign("NUM_unique", nrow(df.unique), envir = .GlobalEnv)
assign("NUM_linked", nrow(df.linked1), envir = .GlobalEnv)
}
sort()
df.all_data[428,"redoAny"]
View(df.all_data)
pkgInit()
sort()
View(df.unique)
df.unique[2581,]
byType()
format(df.unique[1,"ordate"],"%Y")
df.unique[1,"ordate"]
View(df.unique)
pkgInit()
sort()
View(df.all_data)
df.unique[2581,]
byType()
View(df.by_type)
byBrand()
View(df.by_brand)
compByBrand()
preOpByBrand()
failureRate()
View(df.failure_rate)
View(df.comp_by_brand)
View(df.preop_by_brand)
View(df.failure_rate)
a = "St Jude Epic shit"
grep("Epic", a)
a = "Trifecta"
grep("Trif", a)
View(df.unique)
View(df.unique)
library("survival")
library("survminer")
library("splines")
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Epic", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Epic"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
else if(df.surv_data[pat,"avType"] == "M"){
df.surv_data[pat,"avImp"] = "Mechanical"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
View(df.surv_data)
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
View(df.surv_data)
df.unique[1,ordate]
df.unique[1,"ordate"]
df.unique[1,"ordate"]>"2006-01-01 UTC"
df.unique[1,"ordate"]>"2006 UTC"
df.unique[1,"ordate"]-"2006-01-01 UTC"
abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[1,"ordate"]) / 365.2422)
(as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[1,"ordate"]))
as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[1,"ordate"]
as.POSIXct("2016-12-31 UTC", tz="UCT")
df.surv_data = df.unique %>% filter(ordate > as.POSIXct("2016-12-31 UTC", tz="UCT"))
df.surv_data = df.unique %>% filter(ordate > "2016-12-31 UTC")
View(df.surv_data)
View(df.unique)
View(df.surv_data)
df.unique %>% filter(ordate > "2016-12-31 UTC")
df.surv_data = data.frame(df.unique) %>% filter(ordate > "2016-12-31 UTC")
View(df.surv_data)
View(df.unique)
df.surv_data = df.unique %>% filter(avImp == "Trifecta")
View(df.surv_data)
df.surv_data = df.unique %>% filter(age > 75)
View(df.surv_data)
as.POSIXct("2016-12-31 UTC", tz="UCT")
df.unique[1,"ordate"]>"2006-01-01 UTC"
df.surv_data = df.unique %>% filter(ordate > "2010-12-31 UTC")
View(df.surv_data)
df.unique%valve.yrs = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique[,"ordate"]) / 365.2422)
df.unique(,"valve.yrs")
df.unique%valve.yrs = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)
df.unique$ordate
as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate
df.unique%valve.yrs = (as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422
df.unique%valve.yrs = (as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate)
df.unique%valve.yrs = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422))
as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422))
df.unique%valve.yrs = data.frame(as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)))
df.unique%valve.yrs = data.frame(valve.yrs = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)))
data.frame(valve.yrs = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)))
df.unique = cbind(df.unique, data.frame(valve.yrs = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422))))
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422)), "status"=2))
View(df.surv_data)
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data %>% filter(ordate > "2010-12-31 UTC")
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422)), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
nrow(df.surv_data)
rm(df.surv_data)
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422)), "status"=2))
nrow(df.surv_data)
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422)), "status"=2))
View(df.surv_data)
which(is.na(df.surv_data$age))
which(is.na(df.surv_data$sex))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$age)),]
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422)), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data %>% filter(ordate > "2010-12-31 UTC")
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = df.surv_data[,-c(5, 6, 7)]
colnames(df.surv_data)[7:9] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data, conf.type = "log-log")
km.by.type <- survfit(SurvObj ~ avType, data = df.surv_data, conf.type = "log-log")
km.by.brand_m <- survfit(SurvObj ~ avImp, data = df.surv_data, conf.type = "log-log")
ggsurvplot(km.by.sex, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(km.by.type, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("B", "M"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(km.by.brand, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("CE", "SJM Epic", "SJM Trifecta", "Mechanical"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(km.by.sex, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data %>% filter(ordate > "2010-12-31 UTC")
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = df.surv_data[,-c(5, 6, 7)]
colnames(df.surv_data)[7:9] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data, conf.type = "log-log")
km.by.type <- survfit(SurvObj ~ avType, data = df.surv_data, conf.type = "log-log")
km.by.brand <- survfit(SurvObj ~ avImp, data = df.surv_data, conf.type = "log-log")
ggsurvplot(km.by.sex, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422)
View(df.linked2)
df.linked2[,"ordate"]
df.linked1[,"ordate"]
abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422 / 24 / 3600)
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "avImp", "avType")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422 / 24 / 3600)), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data %>% filter(ordate > "2010-12-31 UTC")
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avType=="B", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = df.surv_data[,-c(5, 6, 7)]
colnames(df.surv_data)[7:9] = c("sex", "avType", "avImp")
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data, conf.type = "log-log")
km.by.type <- survfit(SurvObj ~ avType, data = df.surv_data, conf.type = "log-log")
km.by.brand <- survfit(SurvObj ~ avImp, data = df.surv_data, conf.type = "log-log")
ggsurvplot(km.by.sex, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(km.by.type, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("B", "M"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(km.by.brand, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("CE", "SJM Epic", "SJM Trifecta", "Mechanical"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(km.by.brand, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("CE", "SJM Trifecta"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "smokhx", "avImp")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "smokhx", "avImp")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422 / 24 / 3600)), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "Smokhx", "avImp")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "Smokhx", "avImp")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422 / 24 / 3600)), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data %>% filter(ordate > "2010-12-31 UTC")
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(Smokhx=="Yes", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = df.surv_data[,-c(5, 6, 7)]
colnames(df.surv_data)[7:9] = c("sex", "Smokhx", "avImp")
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "Smokhx", "avImp")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "Smokhx", "avImp")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422 / 24 / 3600)), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data %>% filter(ordate > "2010-12-31 UTC")
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(Smokhx=="No", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = df.surv_data[,-c(5, 6, 7)]
colnames(df.surv_data)[7:9] = c("sex", "Smokhx", "avImp")
km.by.smok <- survfit(SurvObj ~ Smokhx, data = df.surv_data, conf.type = "log-log")
ggsurvplot(km.by.smok, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("No Smoking Hx", "Smoking Hx"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
km.by.smok <- survfit(SurvObj ~ Smokhx, data = df.surv_data, conf.type = "log-log")
#km curves
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data, conf.type = "log-log")
km.by.smok <- survfit(SurvObj ~ Smokhx, data = df.surv_data, conf.type = "log-log")
km.by.brand <- survfit(SurvObj ~ avImp, data = df.surv_data, conf.type = "log-log")
ggsurvplot(km.by.sex, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(km.by.smok, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("No Smoking Hx", "Smoking Hx"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
rm(km.by.brand_m, km.by.type)
#univariate cox regression analysis
covariates <- c("age", "sex", "SmokHx", "avImp")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_models <- lapply(univ_formulas_m, function(x){coxph(x, data = df.surv_data_m)})
univ_models <- lapply(univ_formulas, function(x){coxph(x, data = df.surv_data)})
#univariate cox regression analysis
covariates <- c("age", "sex", "Smokhx", "avImp")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data = df.surv_data)})
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
res <- t(as.data.frame(univ_results, check.names = FALSE))
as.data.frame(res)
df.surv_data = rbind(data.frame(df.unique[,c("casenum", "Patient_ID", "ordate", "age", "sex", "Smokcurr", "avImp")],
"valve.yrs" = as.double(abs((as.POSIXct("2016-12-31 UTC", tz="UCT") - df.unique$ordate) / 365.2422)), "status"=1),
data.frame(df.linked1[,c("casenum", "Patient_ID", "ordate", "age", "sex", "Smokcurr", "avImp")],
"valve.yrs" = as.double(abs((df.linked2[,"ordate"] - df.linked1[,"ordate"]) / 365.2422 / 24 / 3600)), "status"=2))
df.surv_data = df.surv_data[ -which(is.na(df.surv_data$sex)),]
df.surv_data = df.surv_data %>% filter(ordate > "2010-12-31 UTC")
for(pat in 1:nrow(df.surv_data)){
if(length(grep("CE ", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "CE"
}
else if(length(grep("Tri", df.surv_data[pat,"avImp"])) == 1){
df.surv_data[pat,"avImp"] = "SJM.Trifecta"
}
}
df.surv_data = rbind(df.surv_data[which(df.surv_data[,"avImp"] == "CE"), ],
df.surv_data[which(df.surv_data[,"avImp"] == "SJM.Trifecta"), ])
df.surv_data = df.surv_data %>% mutate(ifelse(sex=="Male", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(Smokcurr=="No", 1, 2))
df.surv_data = df.surv_data %>% mutate(ifelse(avImp=="CE", 1, 2))
df.surv_data = df.surv_data[,-c(5, 6, 7)]
colnames(df.surv_data)[7:9] = c("sex", "Smokcurr", "avImp")
#km curves
df.surv_data$SurvObj <- with(df.surv_data, Surv(valve.yrs, status == 2))
km.by.sex <- survfit(SurvObj ~ sex, data = df.surv_data, conf.type = "log-log")
km.by.smok <- survfit(SurvObj ~ Smokcurr, data = df.surv_data, conf.type = "log-log")
km.by.brand <- survfit(SurvObj ~ avImp, data = df.surv_data, conf.type = "log-log")
ggsurvplot(km.by.smok, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("No Smoking Hx", "Smoking Hx"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
#univariate cox regression analysis
covariates <- c("age", "sex", "Smokcurr", "avImp")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('Surv(valve.yrs, status)~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data = df.surv_data)})
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
p.value<-signif(x$wald["pvalue"], digits=2)
wald.test<-signif(x$wald["test"], digits=2)
beta<-signif(x$coef[1], digits=2);#coeficient beta
HR <-signif(x$coef[2], digits=2);#exp(beta)
HR.confint.lower <- signif(x$conf.int[,"lower .95"],2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"],2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
#return(exp(cbind(coef(x),confint(x))))
})
res <- t(as.data.frame(univ_results, check.names = FALSE))
as.data.frame(res)
#multivariate cox regression analysis
res.cox <- coxph(Surv(valve.yrs, status) ~ age + sex + Smokcurr + avImp, data = df.surv_data)
summary(res.cox)
#test proportionality: if p < 0.05, then no proportionality
cox.zph = cox.zph(res.cox, transform="km", global=TRUE)
cox.zph
#slope of 0 implies proportionality
plot(cox.zph[1])
plot(cox.zph[2])
plot(cox.zph[3])
plot(cox.zph[4])
print(cox.zph)
#residuals
plot(df.surv_data[,"age"], resid(res.cox, type="score")[,1], ylab="Score Residuals", xlab="age")
plot(df.surv_data[,"sex"], resid(res.cox, type="score")[,2], ylab="Score Residuals", xlab="sex")
plot(df.surv_data[,"Smokcurr"], resid(res.cox, type="score")[,3], ylab="Score Residuals", xlab="Smokcurr")
plot(df.surv_data[,"avImp"], resid(res.cox, type="score")[,4], ylab="Score Residuals", xlab="avImp")
ggsurvplot(survfit(res.cox, data = df.surv_data, conf.type = "log-log"), xlab = "valve yrs", ylab = "probability of valve durability", conf.int = T, ylim = c(0.85, 1))
cox.by.sex   = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,2), smok = c(1,1), brand = c(1,1)))
cox.by.smok  = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,1), smok = c(1,2), brand = c(1,1)))
cox.by.brand = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,1), smok = c(1,1), brand = c(1,2)))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex, data = df.surv_data, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.85, 1))
cox.by.sex   = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,2), Smokcurr = c(1,1), brand = c(1,1)))
cox.by.smok  = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,1), Smokcurr = c(1,2), brand = c(1,1)))
cox.by.brand = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,1), Smokcurr = c(1,1), brand = c(1,2)))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex, data = df.surv_data, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.85, 1))
cox.by.sex   = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,2), Smokcurr = c(1,1), avImp = c(1,1)))
cox.by.smok  = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,1), Smokcurr = c(1,2), avImp = c(1,1)))
cox.by.brand = with(df.surv_data, data.frame(age = rep(mean(age), 2), sex = c(1,1), Smokcurr = c(1,1), avImp = c(1,2)))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex, data = df.surv_data, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.85, 1))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.smok, data = df.surv_data, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("No Smoking Hx", "Smoking Hx"), conf.int = T, ylim = c(0.85, 1))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.brand, data = df.surv_data, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("CE", "SJM Trifecta"), conf.int = T, ylim = c(0.85, 1))
qqnorm(df.surv_data$age, main="qq plot: age", ylab="age (yrs)")
qqline(df.surv_data$age)
qqnorm(df.surv_data$valve.yrs, main="qq plot: valve.yrs", ylab="valve.yrs (yrs)")
qqline(df.surv_data$valve.yrs)
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex, data = df.surv_data, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = F, ylim = c(0.95, 1))
?ggsurvplot
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex, data = df.surv_data, conf.type = "log-log"),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.95, 1))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex, data = df.surv_data),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.95, 1))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex, data = df.surv_data),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, conf.type = "log-log", ylim = c(0.95, 1))
ggsurvplot(survfit(formula=res.cox, newdata=cox.by.sex),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, conf.type = "log-log", ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, newdata=cox.by.sex),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, conf.type = "log-log", ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, df.surv_data, newdata=cox.by.sex),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, conf.type = "log-log", ylim = c(0.95, 1))
?ggsurvplot
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.sex),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, conf.type = "log-log", ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.sex),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.sex),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = T, ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.sex),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Male", "Female"), conf.int = F, ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.smok),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("No Smoking Hx", "Smoking Hx"), conf.int = f, ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.smok),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("No Smoking Hx", "Smoking Hx"), conf.int = F, ylim = c(0.95, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.brand),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("CE", "SJM Trifecta"), conf.int = F, ylim = c(0.95, 1))
summary(res.cox)
print(cox.zph)
write.csv(df.surv_data, file = "s.csv")
ggsurvplot(km.by.smok, xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Not a Current Smoker", "Current Smoker"),
risk.table = T, conf.int = T, pval = T, pval.coord = c(0, 0.9), ylim = c(0.85, 1))
ggsurvplot(survfit(res.cox, data=df.surv_data, newdata=cox.by.smok),
xlab = "valve yrs", ylab = "probability of valve durability", legend.labs=c("Not a Current Smoker", "Current Smoker"), conf.int = F, ylim = c(0.95, 1))
save.image("~/GitHub/AVREval/env.RData")
